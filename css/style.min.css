@charset "UTF-8";@-webkit-keyframes a1{to{min-height:0;min-width:0;padding:0;margin:0;border:0}}@keyframes a1{to{min-height:0;min-width:0;padding:0;margin:0;border:0}}.back404{-webkit-filter:brightness(.1);position:absolute;top:0;left:0;width:100%;height:100%}.error__row{width:80%;margin:20% 20% 0;position:absolute;z-index:1}.error__row h2{font-size:36px;line-height:44px;color:#fafafa}.error__row p{font-size:14px;line-height:24px;color:#fff;opacity:.7}.gotomain{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:48px}.gotomain #error_span,.gotomain span{width:8px;height:1px;background:rgba(255,255,255,.2)}.gotomain a{font-size:10px;line-height:12px;letter-spacing:.12em;text-transform:uppercase;color:#fff;margin:0 8px}.gotomain #error_span{width:56px}.about__header{width:100%;height:648px;margin-top:96px}.about__header-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:24px;width:383px;margin:0 auto;padding-top:230px}.about__header-row h2,.about__header-row p{color:#fff;text-align:center}.about__header-row p{font-size:14px;line-height:24px}.about-slide-color{color:#828282;opacity:.5}.main__scrollbar-color2{background:#828282;opacity:.32}.location-page2{margin-right:135px}.about__slider{margin-top:140px}.about__slider-left,.about__slider-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:16%}.about__slider-left{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:56px;width:37%;-webkit-box-align:end;-ms-flex-align:end;align-items:end;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.about__slider-left .slider-left__title{width:383px}.about__ceo-p span,.about__header-row h2,.about__slider-left .slider-left__title h2{font-size:36px;line-height:44px}.about__slider-left .slider-left__title p{font-size:14px;line-height:24px;margin-top:24px}.about__slider-right{width:47%}.about__swiper{width:100%;height:444px}.about__slide:nth-child(1),.about__slide:nth-child(2),.about__slide:nth-child(3),.about__slide:nth-child(4){width:552px;height:444px;background-size:100% 100%}.about__stat-row{display:-webkit-box;display:-ms-flexbox;display:flex;width:90%;margin:140px auto 0;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative}.about__stat-img{width:50%;text-align:center}.about__stat-img img{width:80%;height:100%}.about__stat-text{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;width:50%;padding:90px 10%}.about__stat-text div{width:50%;margin-bottom:44px}.about__stat-text div h2{color:#080808}.about__stat-text div span,.about__stat-text p{font-size:14px;line-height:132%;color:#080808}.about__stat-text p{padding-top:31px;line-height:24px}.about__stat-img2{position:absolute;right:-5.5%;bottom:-7%}.about__ceo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:90%;margin:180px auto 140px}.about__ceo-title{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:50%}.about__ceo-title h2{font-size:36px;line-height:44px;margin:10% 0 0 15%}.about__ceo-title h4{font-size:16px;line-height:22px;margin:5% 0 0 15%}.about__ceo-title img{margin:25% 0 0 7%;width:40%}.about__ceo-info .about__ceo-number,.about__ceo-p,.about__ceo-title{display:-webkit-box;display:-ms-flexbox;display:flex}.about__ceo-p{gap:32px;margin:8% 0 0 10%;width:70%}.about__ceo-p p,.about__team-input input{font-size:20px;line-height:170.66%;opacity:.7}.about__ceo-info,.about__ceo-info .about__ceo-number div{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:50%}.about__ceo-info .about__ceo-number{margin:15% 0 8%}.about__ceo-info .about__ceo-number div{gap:5px;width:30%}.about__ceo-info .about__ceo-number div h2,.about__stat-text div h2{font-size:56px;line-height:68px}.about__ceo-info .about__ceo-number div span{font-size:14px;line-height:132%;width:45%}.about__ceo-info img,.about__ceo-info p{width:80%}.about__team{background:#ececec;padding-top:140px}.about__team h2{font-size:36px;line-height:51px;margin-left:15%;width:28%}.about__team-input{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:70%;margin:130px auto 140px}.about__team-input input{background:url(../img/about-input.svg) no-repeat right;width:40%;height:35px;border-bottom:1px solid}.about__team-input,.about__team-link,.about__team-right{display:-webkit-box;display:-ms-flexbox;display:flex}.about__team-right{width:40%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px}.about__ceo-info p,.about__team-right p{font-size:14px;line-height:24px}.about__team-link{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.about__team-link div a,.about__team-link span,.blog__title-btn button{font-size:11px;line-height:13px;letter-spacing:.06em}.about__team-link div{gap:16px}.about__team-link div a,.blog__title-btn button{color:#080808}.blog__title{margin:208px auto 124px;width:80%}.about__team-link div,.blog__title-btn,.blog__title-row{display:-webkit-box;display:-ms-flexbox;display:flex}.blog__title-row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.blog__title-row h2{font-size:36px;line-height:44px}.blog__title-btn{gap:32px}.blog__title-btn button{background:0 0;color:#828282;border-bottom:1px solid transparent}.blog__title-btn button:hover{color:#080808;border-bottom:1px solid #080808}.select-blog{display:none;width:128px;position:relative}.blog__link-a a,.select-blog.is-active .select__body-blog{display:block}.select__header-blog{border:1px solid #c4c4c4;border-radius:88px;cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex}.select__current-blog{font-size:11px;line-height:13px;letter-spacing:.06em;padding:7px 10px 7px 13px;width:109px}.select__body-blog{background:#fafafa;border:1px solid #c4c4c4;border-radius:10px;display:none;left:0;position:absolute;right:0;top:100%}.select__item-blog{cursor:pointer;font-size:11px;line-height:13px;letter-spacing:.06em;padding:8px}#select-img3{position:absolute;right:7%;top:44%}.blog__link-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:8px}.blog__link-a{width:49%;height:652px}.blog__link-a a img{width:100%}.blog__link-discover{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;margin:56px 0}.blog__link-discover .blog__link-discover1{width:8px;height:1px;background:rgba(49,49,49,.2)}.blog__link-discover .blog__link-discover2{width:56px;height:1px;background:rgba(49,49,49,.2)}.blog__link-discover span{font-size:10px;line-height:8px;letter-spacing:.12em;text-transform:uppercase}.blog__link-a:nth-child(1),.blog__link-a:nth-child(6){background:#f2f2f2;height:652px}.blog__link-a:nth-child(1) img,.blog__link-a:nth-child(6) img,.menu li:nth-child(1){display:none}.blog__link-a:nth-child(1) a,.blog__link-a:nth-child(6) a{color:#080808;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;margin:39% 0 0 10%}.blog__link-a:nth-child(1) a h3,.blog__link-a:nth-child(6) a h3{font-size:28px;line-height:34px;width:52%}.blog__link-a:nth-child(1) a p,.blog__link-a:nth-child(6) a p{font-size:14px;line-height:24px;opacity:.7;margin-top:24px;width:65%}.blog__link-a:nth-child(3) a p,.blog__link-a:nth-child(4) a p{font-size:28px;line-height:36px;width:50%;margin:0 0 0 4%;padding-top:550px}.blog__link-aimg{background:url(../img/blog__link-a1.png) 0 0/100% 100%;width:100%;height:100%}.blog__link-aimg2{background:url(../img/blog__link-a2.png) 0 0/100% 100%;width:100%;height:100%}.blog__link-aimg3{background:url(../img/blog__link-a3.png) 0 0/100% 100%;width:100%;height:100%}.blog__pagination{width:15%;margin:96px auto 140px}.blog__pagination-a,.blog__pagination-row{display:-webkit-box;display:-ms-flexbox;display:flex}.blog__pagination-row{-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:40px}.blog__pagination-row img{cursor:pointer;margin-top:3px}.blog__pagination-a{gap:20px}.blog__pagination-a a,.contact__row button{font-size:11px;line-height:13px;letter-spacing:.06em;color:#080808}.blog__footer{background:url(../img/blog-footer.png) no-repeat 0 0/100% 100%;width:100%;height:654px}.blog__footer-mail,.blog__footer-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.blog__footer-row{width:80%;margin:0 auto;padding:8% 0 8.7%;gap:25px}.blog__footer-title h2{font-size:36px;line-height:51px;color:#fff;width:35%}.blog__footer-mail{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;gap:41px}.blog__footer-mail p{font-size:14px;line-height:24px;color:#fff;width:30%}.blog__footer-mail input{background:url(../img/blog-footer-right.svg) no-repeat right;width:30%;font-size:20px;line-height:170.66%;opacity:.7;height:35px;color:#fff;border-bottom:1px solid rgba(255,255,255,.3)}.body__contact{background:#000;color:#fff}.body__contact a{color:#fff}.contact__row{margin:182px auto 0;width:1052px}.contact__row button{width:183px;height:48px;background:#fff;text-align:center;margin-top:72px}.contact__title h3{font-size:36px;line-height:44px;color:#fff}.contact__city p,.contact__title p{font-size:14px;line-height:24px;color:#fff;opacity:.6}.contact__title p{width:390px}.contact__maps{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:72px}.contact__city h4{font-size:16px;line-height:22px;color:#fff}.contact__city p{margin-top:24px}.contact__mail p,.mail__link a{font-size:11px;line-height:13px;letter-spacing:.06em;color:#fff}.contact__maps,.mail__link,.maps__row{display:-webkit-box;display:-ms-flexbox;display:flex}.maps__row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:102px}.mail__link{gap:16px;margin-top:23px}.row__sum p,.row__sum span{font-family:"Poppins";font-style:italic;font-weight:400}.row__sum span{font-family:"Playfair Display";font-size:13.2236px;line-height:80%;margin-left:33px}.about__ceo-info .about__ceo-number div span,.about__ceo-info p,.about__ceo-p p,.about__header-row p,.about__slider-left .slider-left__title p,.about__stat-text div span,.about__stat-text p,.about__team-input input,.about__team-right p,.blog__footer-mail input,.blog__footer-mail p,.blog__link-a:nth-child(1) a p,.blog__link-a:nth-child(6) a p,.bottom__p p,.contact__city p,.contact__title p,.current-slide,.error__row p,.footer__row h4,.lorem__title p,.onenews__donec-row p,.onenews__header-title p,.onenews__slide:nth-child(1) p,.onenews__slide:nth-child(2) p,.onenews__slide:nth-child(3) p,.onenews__slide:nth-child(4) p,.onenews__slide:nth-child(5) p,.oneproject__donec-title p,.ourprojects__top-right p,.popup__send-row p,.preloader .loader h1,.projects__title p,.slideshou__bottom p,.top__title p,.total-slides{font-family:"Montserrat";font-style:normal;font-weight:300}.footer{z-index:1}.footer__row,.row__right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;padding-bottom:24px}.footer__row h4{font-size:12px;line-height:18px;color:#828282}.row__right{gap:24px}.row__sum p{font-size:12.6864px;line-height:80%}.header__logo a,.img__data span,.oneproject__header-tittle p{font-family:"Montserrat";font-style:normal;font-weight:400}.about__team-link div a,.about__team-link span,.blog__pagination-a a,.blog__title-btn button,.bottom__link a,.contact__mail p,.contact__row button,.file-upload__label,.getintouch__row button,.mail__link a,.main__contact span,.menu-text,.menu__link,.navbar__icon a,.oneproject-btn a,.oneproject__header-chair .oneproject__header-chair1 span,.ourprojects-menu .button-filet,.popup-btn,.popup__content-bottom h4,.popup__content-top input,.select__current-blog,.select__header span,.select__header-popup span,.select__item,.select__item-blog,.select__item-popup,.slide__row2 span,.slideshou__bottom button{font-family:"Montserrat";font-style:normal;font-weight:600}.about__ceo-info .about__ceo-number div h2,.about__ceo-p span,.about__ceo-title h2,.about__ceo-title h4,.about__header-row h2,.about__slider-left .slider-left__title h2,.about__stat-text div h2,.about__team h2,.blog__footer-title h2,.blog__link-a:nth-child(1) a h3,.blog__link-a:nth-child(3) a p,.blog__link-a:nth-child(4) a p,.blog__link-a:nth-child(6) a h3,.blog__link-discover span,.blog__title-row h2,.bottom__p span,.company__row .bottom__right,.company__row .top__left,.contact__city h4,.contact__title h3,.error__row h2,.furinure-discover h3,.furinure__img-hover-h4,.furinure__img-margin,.furinure__img:nth-child(5) h4,.furniture__bottom-title,.gotomain a,.lorem__title h2,.onenews__donec-row h4,.onenews__header-title h2,.onenews__slide:nth-child(1) h4,.onenews__slide:nth-child(2) h4,.onenews__slide:nth-child(3) h4,.onenews__slide:nth-child(4) h4,.onenews__slide:nth-child(5) h4,.onenews__slider-title h3,.oneproject__donec-discover p,.oneproject__donec-title h4,.oneproject__header-tittle h2,.oneproject__next h2,.oneproject__next h5,.ourprojects__top-title,.popup__content-top h2,.popup__send-row h2,.projects__title h3,.slide__row h2,.slide__row2 p,.top__title h3{font-family:"Montserrat";font-style:normal;font-weight:700}.header__top{width:100%;height:96px;position:absolute;top:0;left:0;z-index:10}.header__logo,.header__row,.header__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__row{width:100%}.header__logo{z-index:2}.header__logo a{font-size:14px;line-height:17px;letter-spacing:.3em;text-transform:uppercase}.header__menu{width:100%;margin-left:141px}.container{width:100%;padding:0 64px}.menu__link,.navbar__icon a{font-size:11px;line-height:13px;letter-spacing:.06em}.navbar{display:-webkit-box;display:-ms-flexbox;display:flex}.navbar,.navbar__links,.navbar__links .menu{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.navbar__links .menu{width:338px;height:50px}.navbar__links .menu a,.select-popup.is-active .select__body-popup{display:block}.navbar__icon,.navbar__links,.navbar__links .menu,.navbar__links .menu__row{display:-webkit-box;display:-ms-flexbox;display:flex}.navbar__links .menu__row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:35%}.navbar__icon{-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:83px;z-index:2}.a_btn-menu a,.navbar__icon #a_btn{border:1px solid;padding:17px 48px}.a_btn-menu{display:none}.a_btn-menu a{font:600 11px/13px "Montserrat";letter-spacing:.06em;border:1px solid #fff}.main__bottom-header{display:none;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:67%;position:absolute;z-index:2;bottom:4%;left:5%}#a-logo.active-color,#a_btn-menu.active-color,#a_btn.active-color,#a_lang.active-color,#bottom__link-a.active-color,#bottom__link-a2.active-color,#bottom__link-a3.active-color,#bottom__link-a4.active-color,#bottom__link-a5.active-color,body a{color:#fff}.hamburger{display:none;font-size:24px;cursor:pointer;width:28px;z-index:2}.hamburger__line{background:0 0;display:block;position:relative;width:28px;height:1px;-webkit-transform:matrix(-1,0,0,1,0,0);-ms-transform:matrix(-1,0,0,1,0,0);transform:matrix(-1,0,0,1,0,0)}.hamburger__line::after,.hamburger__line::before{background:#fff;content:"";display:block;position:absolute;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;width:100%;height:100%}.hamburger__line::before{top:3px}.hamburger__line::after{top:-5px}.menu-text{font-size:11px;line-height:13px;letter-spacing:.06em;display:none}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}button,input,textarea{font-family:inherit}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}.onenews__header{width:80%;margin:208px auto 96px}.onenews__header-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.onenews__header-link,.onenews__header-link2,.onenews__header-title{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.onenews__header-title{display:-webkit-box;display:-ms-flexbox;display:flex;gap:32px;width:70%}.onenews__header-title h2{width:55%}.onenews__donec-row p,.onenews__header-title p{font-size:14px;line-height:24px;opacity:.7;width:75%}.onenews__header-link,.onenews__header-link2{gap:10px}.onenews__header-link{display:-webkit-box;display:-ms-flexbox;display:flex;width:15%}.onenews__header-link span,.onenews__header-link2 span{font-size:14px;line-height:170.66%}.onenews__header-link .onenews__header-a{display:-webkit-box;display:-ms-flexbox;display:flex;gap:8px}.onenews__header-link2{display:none;width:40%;margin-top:48px}.onenews-img{background:url(../img/onenews1.png) no-repeat 0 0/100% 100%;width:100%;height:652px}.onenews__donec{width:80%;margin:96px auto}.onenews__donec-list,.onenews__donec-row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.onenews__donec-row{display:-webkit-box;display:-ms-flexbox;display:flex}.onenews__donec-row h4{font-size:16px;line-height:22px;width:30%;margin-bottom:17px}.onenews__donec-row p{width:52%}.onenews__donec-list{margin:40px 0;gap:12px}.onenews__donec-list,.onenews__donec-list p,.onenews__img-row{display:-webkit-box;display:-ms-flexbox;display:flex}.onenews__donec-list p{-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:10px}.onenews__donec-list p span{display:block;border-radius:50%;border:1px solid #515151;width:6px;height:6px}.onenews__img-row{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:8px}.onenews-img2{background:url(../img/onenews2.png) no-repeat 0 0/100% 100%;width:100%;height:653px}.onenews-img3{background:url(../img/onenews3.png) no-repeat 0 0/100% 100%;width:49.6%;height:652px}.onenews-img4{background:url(../img/onenews4.png) no-repeat 0 0/100% 100%;width:49.6%;height:652px}.onenews__span{width:80%;margin:0 auto}.onenews__span span{display:block;width:100%;height:1px;background:#828282;opacity:.16}.onenews__slider{margin:140px 0 140px 10%}.onenews__slider-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:72px}.onenews__header-title h2,.onenews__slider-title h3,.oneproject__header-tittle h2{font-size:36px;line-height:44px}.onenews__swiper{width:100%}.onenews__slide:nth-child(1),.onenews__slide:nth-child(2),.onenews__slide:nth-child(3),.onenews__slide:nth-child(4),.onenews__slide:nth-child(5){width:316px}.onenews__slide:nth-child(1) img,.onenews__slide:nth-child(2) img,.onenews__slide:nth-child(3) img,.onenews__slide:nth-child(4) img,.onenews__slide:nth-child(5) img{width:316px;height:389px}.onenews__slide:nth-child(1) h4,.onenews__slide:nth-child(2) h4,.onenews__slide:nth-child(3) h4,.onenews__slide:nth-child(4) h4,.onenews__slide:nth-child(5) h4{font-size:14px;line-height:19px;margin-top:24px}.onenews__slide:nth-child(1) p,.onenews__slide:nth-child(2) p,.onenews__slide:nth-child(3) p,.onenews__slide:nth-child(4) p,.onenews__slide:nth-child(5) p{font-size:10px;line-height:17px;color:#828282;margin-top:16px}.oneproject__header{background:url(../img/oneproject1.png) 0 0/100% 100%;width:100%;height:744px}.oneproject__header-row{padding-top:262px}.oneproject__header-tittle{width:80%;margin:0 auto}.oneproject__header-tittle p{margin-top:24px;width:45%}.oneproject__header-chair,.oneproject__header-chair .oneproject__header-chair1,.oneproject__header-link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.oneproject__header-chair{width:80%;margin:64px auto 0;gap:32px}.oneproject__header-chair .oneproject__header-chair1,.oneproject__header-link{gap:14px}.oneproject__header-chair .oneproject__header-chair1 span{font-size:11px;line-height:13px;letter-spacing:.06em;opacity:.7}.oneproject__header-link{gap:120px;margin:198px 0 0 42px}.oneproject__header-link span,.oneproject__header-tittle p{font-size:14px;line-height:170.66%}.oneproject__donec,.oneproject__header-a{display:-webkit-box;display:-ms-flexbox;display:flex;gap:8px}.oneproject__donec{width:80%;margin:140px auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:40px;color:#080808}.oneproject__donec-title h4{font-size:16px;line-height:22px;width:40%}.oneproject__donec-title p{font-size:14px;line-height:24px;opacity:.7;margin-top:17px;width:65%}.oneproject__donec-discover,.oneproject__foto-row{display:-webkit-box;display:-ms-flexbox;display:flex;gap:8px}.oneproject__donec-discover{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.oneproject__donec-discover .span2,.oneproject__donec-discover span{width:8px;height:1px;background:rgba(49,49,49,.2)}.oneproject__donec-discover .span2{width:56px}.oneproject__donec-discover p{font-size:10px;line-height:12px;letter-spacing:.12em;text-transform:uppercase}.oneproject__foto-row{-ms-flex-wrap:wrap;flex-wrap:wrap}.oneproject__img{height:652px}.oneproject__img:nth-child(1){width:99.5%}.oneproject__img:nth-child(2),.oneproject__img:nth-child(3){width:49.5%}.oneproject__img:nth-child(4){width:99.5%}.oneproject-img1{background:url(../img/oneproject-img1.png) 0 0/100% 100%;display:block;width:100%;height:652px}.oneproject-img2{background:url(../img/oneproject-img2.png) 0 0/100% 100%}.oneproject-img2,.oneproject-img3,.oneproject-img4{display:block;width:100%;height:652px}.oneproject-img3{background:url(../img/oneproject-img3.png) 0 0/100% 100%}.oneproject-img4{background:url(../img/oneproject-img4.png) 0 0/100% 100%}.oneproject-btn{margin:80px auto 140px;width:210px}.oneproject-btn a,.popup__content-top input{font-size:11px;line-height:13px;letter-spacing:.06em}.oneproject-btn a{padding:17px 48px;border:1px solid rgba(8,8,8,.32);background:#fff;text-align:center;color:#080808}.oneproject-furniture__bottom{padding-top:2px}.oneproject__next{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.oneproject__next h5{font-size:8px;line-height:14px;letter-spacing:.2em;text-transform:uppercase;color:#828282}.oneproject__next h2{font-size:36px;line-height:44px;margin-top:16px}.oneproject__next-img{background:url(../img/oneproject-img1.png) 0 0/100% 100%;width:100%;height:652px;margin-top:128px;margin-bottom:-206px}.file-upload__label span,.onenews__header-link span,.onenews__header-link2 span,.oneproject__header-link span,.popup__p p,.popup__radio-row label{font-family:"Montserrat";font-style:normal;font-weight:500}.popup__p p{font-family:"Roboto";font-weight:400;font-size:10px;line-height:14px;text-align:center;letter-spacing:.06em;color:#afb0b2}.popup{background:rgba(8,8,8,.96);position:fixed;width:100%;height:100%;color:#3a3e4b;top:0;left:0;opacity:0;visibility:hidden;z-index:50;-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease;overflow-y:auto}.popup__close{position:absolute;top:0;right:0;margin:40px 40px 0 0;z-index:52}.popup__content-top,.popup__row{width:70%;display:-webkit-box;display:-ms-flexbox;display:flex}.popup__row{margin:6% auto;background:#f2f2f2;-webkit-box-shadow:0 2px 24px rgba(0,0,0,.04);box-shadow:0 2px 24px rgba(0,0,0,.04);-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:6px}.popup__content-top{margin:56px auto 0;background:#fff;border:1px solid rgba(0,0,0,.04);padding:44px 0;-ms-flex-wrap:wrap;flex-wrap:wrap}.popup__content-top h2{font-size:22px;line-height:28px;text-align:center;padding:0 0 38px;width:100%}.popup__content-top input{border-bottom:1px solid rgba(214,214,214,.3);padding-bottom:5px}.popup__content-input1,.popup__content-input2{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:38px;width:50%}.popup__content-input1 input,.popup__content-input2 input{width:90%}.popup__content-input1{padding-left:5%}.select-popup{width:90%;position:relative}.select__header-popup{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid rgba(214,214,214,.3);padding-bottom:5px;cursor:pointer}.popup__content-bottom h4,.select__header-popup span{font-size:11px;line-height:13px;letter-spacing:.06em}.select__body-popup{background:#fff;border:1px solid #ccc;border-top:0;display:none;left:0;position:absolute;right:0;top:100%}.select__item-popup{font-size:10px;line-height:11px;letter-spacing:.06em;padding:3px 0 3px 3px;cursor:pointer}.select__item-popup:hover{background:rgba(54,53,53,.2)}.popup.open{opacity:1;visibility:visible}.last-input{width:90%;margin:38px 0 0 5%}.popup__content-bottom{width:70%;margin:0 auto 56px;background:#fff;border:1px solid rgba(0,0,0,.04);padding:44px 0 37px}.popup__content-bottom h4{margin-left:5%}.popup__radio{-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:98%;margin:24px auto 0}.popup__radio,.popup__radio-row,.popup__radio1{display:-webkit-box;display:-ms-flexbox;display:flex}.popup__radio1{width:50%;position:relative}.popup__radio-row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:10px;width:100%}.popup__radio-row label{font-size:9px;line-height:11px;letter-spacing:.06em}.popup__radio-row input{background:url(../img/popup-radio.png) 0 0/cover;width:18px;height:18px;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-transition:.2s all linear;-o-transition:.2s all linear;transition:.2s all linear;outline:0;z-index:2}.popup__radio-row input:checked{background:url(../img/popup-radio-checked.png) 0 0/cover}.popup__radio2{display:-webkit-box;display:-ms-flexbox;display:flex;width:50%;position:relative}.popup__radio1-span,.popup__radio2-span{position:absolute;background:rgba(214,214,214,.3);height:1px;width:86%;top:75%;z-index:1}.popup__radio1-span{left:14%}.popup__radio2-span{right:14%}.popup__add{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:88%;margin:54px auto 38px}.popup-btn{width:183px;height:42px;background:#3a3e4b;font-size:11px;line-height:13px;text-align:center;letter-spacing:.06em;color:#fff}.popup-btn:hover{background:#080808;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.file-upload{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:12px}.file-upload__input{display:none}.file-upload__button{background:url(../img/popup-add.png) 0 0/cover;width:39px;height:39px}.file-upload__label{font-size:11px;line-height:13px;letter-spacing:.06em;max-width:250px;-o-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.file-upload__label span{font-size:9px;line-height:11px;letter-spacing:.06em;color:rgba(58,62,75,.45)}.popup__p{width:80%;margin:0 auto}.popup__send{background:rgba(8,8,8,.96);position:fixed;width:100%;height:100%;color:#3a3e4b;top:0;left:0;opacity:0;visibility:hidden;z-index:51;-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease;overflow-y:auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.popup__send-row{width:60%;margin:auto;background:#fff;border:1px solid rgba(0,0,0,.04);padding:180px 0}.popup__send-row h2{font-size:24px;line-height:29px;text-align:center}.popup__send-row p{font-size:14px;line-height:24px;text-align:center;width:70%;opacity:.7;margin:24px auto 40px}.popup__send.open{opacity:1;visibility:visible}.send-btn{margin:0 auto;display:block}.ourprojects{margin-top:208px}.ourprojects__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:82%;margin:0 auto}.ourprojects__top-title{font-size:36px;line-height:44px}.ourprojects__top-right p{width:449px;font-size:14px;line-height:24px}.ourprojects-menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:32px;gap:32px}.ourprojects-menu .button-filet{background:0 0;font-size:11px;line-height:13px;letter-spacing:.06em;color:#828282;border-bottom:1px solid transparent}.ourprojects-menu .button-filet:hover{-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.button-filet.active__button,.ourprojects-menu .button-filet:hover{color:#080808;border-bottom:1px solid #080808}.furinure__img2{width:49.5%;height:653px}.furinure__img3{width:99.5%;height:653px}.project__link-aimg5{background:url(../img/ptoject5.png) 0 0/100% 100%;display:block;width:100%;height:653px}.project__link-aimg6{background:url(../img/ptoject6.png) 0 0/100% 100%;display:block;width:100%;height:653px}.furinure__img-margin{margin:502px 0 0 32px;font-size:22px;line-height:28px}.projects-btn{background:0 0;border:1px solid #000}.hide{display:none;-webkit-animation-name:a1;animation-name:a1;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}body,html{height:100%}body{background:#fff;color:#fff}body.lock{overflow:hidden}.preloader .loader,.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.wrapper{min-height:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.preloader{background:#080808;position:fixed;left:0;top:0;width:100%;height:100%;-webkit-transition:1.5s all;-o-transition:1.5s all;transition:1.5s all;opacity:1;visibility:visible;z-index:100}.preloader .loader{position:absolute;width:140px;height:23px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.preloader .loader h1{font-size:24px;line-height:29px;letter-spacing:.26em;color:#fafafa}.preloader.done{opacity:0;visibility:hidden}.main__bottom,.main__contact{display:-webkit-box;display:-ms-flexbox;display:flex}.main__bottom{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:41%;position:absolute;z-index:2;left:4%;margin-top:-60px}.main__contact{gap:31px}.bottom__link a,.main__contact span,.select__header span{font-size:11px;line-height:13px;letter-spacing:.06em}.select{width:117px;height:24px;background:rgba(255,255,255,.4);-webkit-box-shadow:0 1.15336px 1.22544px rgba(0,0,0,.2),inset 0 -.288339px .0720847px rgba(255,255,255,.23);box-shadow:0 1.15336px 1.22544px rgba(0,0,0,.2),inset 0 -.288339px .0720847px rgba(255,255,255,.23);-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);border-radius:8.70783px;position:relative}.select__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:100%;cursor:pointer}.select__header span{color:#fff}.select__header #select-img1{margin-left:13px}.select__header #select-img2{margin-right:9.5px;margin-bottom:1px}.select__body{width:117px;background:rgba(255,255,255,.4);-webkit-box-shadow:0 1.15336px 1.22544px rgba(0,0,0,.2),inset 0 -.288339px .0720847px rgba(255,255,255,.23);box-shadow:0 1.15336px 1.22544px rgba(0,0,0,.2),inset 0 -.288339px .0720847px rgba(255,255,255,.23);-webkit-backdrop-filter:blur(1px);backdrop-filter:blur(1px);border-radius:8.70783px;position:absolute;left:0;right:0;top:-300%;display:none}.select__item{cursor:pointer;text-align:center;font-size:11px;line-height:13px;letter-spacing:.06em;padding:5px 0}.select__item:hover{background:rgba(255,255,255,.2)}.select.is-active .select__body{display:block}.main__swiper{width:100%;height:744px}.main__slide:nth-child(1),.main__slide:nth-child(2),.main__slide:nth-child(3),.main__slide:nth-child(4){background-size:100% 100%;width:1227px;height:744px}.slide__row,.slide__row2{position:absolute;z-index:2}.slide__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:4px;top:23%;left:16%}.lorem__title h2,.slide__row h2{font-size:56px;line-height:68px}.slide__row2{max-width:300px;right:-3%;margin-top:-250px;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.slide__row2 span{font-size:11px;line-height:13px;text-align:right;letter-spacing:.06em}.slide__row2 p{-webkit-text-fill-color:transparent;-webkit-text-stroke:1px #fff;font-size:48px;line-height:47px;letter-spacing:.04em}.bottom__link{display:-webkit-box;display:-ms-flexbox;display:flex;gap:16px}.company__row .bottom__right,.company__row .top__left,.navigation-panel{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.navigation-panel{gap:12px;z-index:5}.location-page{position:absolute;top:56.5%;left:54%}.main__scrollbar{width:186px;height:1px;opacity:1}.main__scrollbar-color{background:#fff}.current-slide,.total-slides{font-size:11px;line-height:13px;letter-spacing:.06em}.main__left,.main__left img,.main__right,.main__right img{cursor:pointer}.company{width:100%;margin-top:140px;color:#080808}.company__bottom,.company__row,.company__top{display:-webkit-box;display:-ms-flexbox;display:flex}.company__row{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding-left:64px}.company__row .bottom__right,.company__row .top__left{position:absolute;gap:13px;font-size:8px;line-height:14px;letter-spacing:.2em;text-transform:uppercase;color:#828282;opacity:.32;height:11px;rotate:-90deg}.company__row .top__left{width:150px;margin-left:-70px;margin-top:110px}.company__row .bottom__right #company-span,.company__row .top__left #company-span{display:block;width:57px;height:1px;background:#828282;opacity:.16}.company__row .bottom__right{width:152px;margin-top:900px;right:0}.company__bottom,.company__top{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-left:133px}.company__bottom{gap:83px;margin-top:78px;margin-right:215px}.top__title{padding-top:80px;width:50%}.top__title a{color:#000}.top__title span{background:rgba(49,49,49,.2)}.top__title h3{margin-bottom:28px}.top__title p{font-size:14px;line-height:24px;opacity:.7;margin-bottom:24px}.top__right{margin-left:auto;width:30%;height:607px;background-size:cover}.bottom__left,.bottom__p{display:-webkit-box;display:-ms-flexbox;display:flex}.bottom__left #bottom-img1{margin-left:-80px;margin-top:-125px}.bottom__p{gap:32px;margin-top:155px}.bottom__p span,.projects__title h3,.top__title h3{font-size:36px;line-height:44px}.bottom__p p{font-size:20px;line-height:170.66%;opacity:.7}.gotomain #company-error-span{width:56px;height:1px;background:rgba(49,49,49,.2)}.projects{background:-o-radial-gradient(50% 50%,50% 50%,#0f0f0f 0,#080808 100%);background:radial-gradient(50% 50% at 50% 50%,#0f0f0f 0,#080808 100%);margin-top:140px}.furinure-discover,.projects__furniture,.projects__title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.projects__title{padding-top:140px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:34px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.projects__title p{width:449px;font-size:14px;line-height:24px;text-align:center;color:#828282}.furinure-discover,.projects__furniture{gap:8px}.projects__furniture{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:140px}.furinure-discover{margin-top:24px;margin-left:32px}.furinure-discover #furinure-discover-span1{width:9px;height:1px;background:rgba(255,255,255,.4)}.furinure-discover #furinure-discover-span2{width:63px;height:1px;background:rgba(255,255,255,.4)}.furinure-discover h3{font-size:10px;line-height:12px;letter-spacing:.12em;text-transform:uppercase;color:#fff}.furinure__img-hover{display:none}.furinure__img-hover-h4{margin:502px 0 0 32px;font-size:22px;line-height:28px}.furinure__img{cursor:pointer}.furinure__img:hover .furinure__img-hover{display:block;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.furinure__img:nth-child(1){width:49.5%;height:653px}.furinure__img:nth-child(2){width:49.5%;height:653px;color:#fff}.furinure__img:nth-child(3){width:99.5%;height:653px}.furinure__img:nth-child(4){width:49.5%;height:653px}.furinure__img:nth-child(5){background:#fff;width:49.5%;height:653px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:24px}.furinure__img:nth-child(5) h4{font-size:22px;line-height:28px;color:#080808}.furinure__img:nth-child(5) img{width:243px;height:323px}.furinure__img:nth-child(5) img:hover{width:263px;height:343px;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.project__link-aimg{background:url(../img/ptoject1.png) 0 0/100% 100%;display:block;width:100%;height:653px}.project__link-aimg2{background:url(../img/ptoject2.png) 0 0/100% 100%;display:block;width:100%;height:653px}.project__link-aimg3{background:url(../img/ptoject3.png) 0 0/100% 100%;display:block;width:100%;height:653px}.project__link-aimg4{background:url(../img/ptoject4.png) 0 0/100% 100%;display:block;width:100%;height:653px}.img__data{display:-webkit-box;display:-ms-flexbox;display:flex;gap:24px;padding:32px 0 0 32px}.img__data span{font-size:10px;line-height:17px}.furniture__bottom{margin-top:180px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.furniture__bottom,.furniture__bottom-title,.furniture__slideshou{display:-webkit-box;display:-ms-flexbox;display:flex}.furniture__bottom-title{width:488px;font-size:36px;line-height:51px;z-index:4;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.furniture__slideshou{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.slideshou{cursor:pointer}.slideshou:nth-child(1){margin-top:-40px}.slideshou:nth-child(1):hover,.slideshou:nth-child(2):hover,.slideshou:nth-child(3):hover,.slideshou:nth-child(4):hover{-webkit-transform:rotate(6deg);-ms-transform:rotate(6deg);transform:rotate(6deg);z-index:5;-webkit-transition:-webkit-transform .3s ease;-o-transition:transform .3s ease;transition:transform .3s ease;transition:transform .3s ease,-webkit-transform .3s ease}.slideshou:nth-child(2){margin-left:-190px;margin-top:-35px}.slideshou:nth-child(2):hover,.slideshou:nth-child(3):hover,.slideshou:nth-child(4):hover{-webkit-transform:rotate(.33deg);-ms-transform:rotate(.33deg);transform:rotate(.33deg)}.slideshou:nth-child(3){margin-left:-190px;margin-top:-55px}.slideshou:nth-child(3):hover,.slideshou:nth-child(4):hover{-webkit-transform:rotate(5.81deg);-ms-transform:rotate(5.81deg);transform:rotate(5.81deg)}.slideshou:nth-child(4){margin-left:-170px;margin-top:-70px}.slideshou:nth-child(4):hover{-webkit-transform:rotate(1.72deg);-ms-transform:rotate(1.72deg);transform:rotate(1.72deg)}.slideshou:nth-child(5){margin-left:-180px;margin-top:-115px}.slideshou:nth-child(10):hover,.slideshou:nth-child(5):hover,.slideshou:nth-child(6):hover,.slideshou:nth-child(7):hover,.slideshou:nth-child(8):hover,.slideshou:nth-child(9):hover{-webkit-transform:rotate(10.5deg);-ms-transform:rotate(10.5deg);transform:rotate(10.5deg);z-index:5;-webkit-transition:-webkit-transform .3s ease;-o-transition:transform .3s ease;transition:transform .3s ease;transition:transform .3s ease,-webkit-transform .3s ease}.slideshou:nth-child(6){margin-left:-200px;margin-top:-125px}.slideshou:nth-child(10):hover,.slideshou:nth-child(6):hover,.slideshou:nth-child(7):hover,.slideshou:nth-child(8):hover,.slideshou:nth-child(9):hover{-webkit-transform:rotate(6deg);-ms-transform:rotate(6deg);transform:rotate(6deg)}.slideshou:nth-child(7){margin-left:-190px;margin-top:-125px}.slideshou:nth-child(10):hover,.slideshou:nth-child(7):hover,.slideshou:nth-child(8):hover,.slideshou:nth-child(9):hover{-webkit-transform:rotate(.33deg);-ms-transform:rotate(.33deg);transform:rotate(.33deg)}.slideshou:nth-child(8){margin-left:-180px;margin-top:-145px}.slideshou:nth-child(10):hover,.slideshou:nth-child(8):hover,.slideshou:nth-child(9):hover{-webkit-transform:rotate(5.81deg);-ms-transform:rotate(5.81deg);transform:rotate(5.81deg)}.slideshou:nth-child(9){margin-left:-180px;margin-top:-150px}.slideshou:nth-child(10):hover,.slideshou:nth-child(9):hover{-webkit-transform:rotate(1.72deg);-ms-transform:rotate(1.72deg);transform:rotate(1.72deg)}.slideshou:nth-child(10){margin-left:-170px;margin-top:-200px}.slideshou:nth-child(10):hover{-webkit-transform:rotate(10.5deg);-ms-transform:rotate(10.5deg);transform:rotate(10.5deg)}.slideshou__bottom{margin-top:-240px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:end}.lorem__title p,.slideshou__bottom p{width:339px;font-size:14px;line-height:24px}.slideshou__bottom button{margin-top:41px;width:183px;height:48px;font-size:11px;line-height:13px;text-align:center;letter-spacing:.06em;color:#080808;margin-bottom:180px;margin-right:150px}.projects-btn2{background:#fff}.lorem__title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:18px;margin-top:-150px}.lorem__title p{width:390px;text-align:center;opacity:.6}.lorem__top{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;padding-right:110px}.lorem__top,.lorem__top .lorem__top-left,.lorem__top .lorem__top-right{display:-webkit-box;display:-ms-flexbox;display:flex}.lorem__top .lorem__top-left .lorem-img:nth-child(1){margin-top:184px;z-index:1}.lorem__top .lorem__top-left .lorem-img:nth-child(2){margin-left:-60px;margin-top:60px}.lorem__top .lorem__top-right .lorem-img:nth-child(1){z-index:1}.lorem__top .lorem__top-right .lorem-img:nth-child(2){margin-left:-80px}.lorem__bottom,.lorem__bottom-left{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.lorem__bottom{width:100%;gap:25px}.lorem__bottom-left{width:560px}.lorem__bottom-left .lorem-img:nth-child(1){margin-top:310px}.lorem__bottom-left .lorem-img:nth-child(2){margin-top:150px}.lorem__bottom-right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:670px}.lorem__bottom-right .lorem-img:nth-child(1){margin-top:310px}.lorem__bottom-right .lorem-img:nth-child(2){margin-top:20px}.lorem__bottom-right .lorem-img:nth-child(2) img{width:315px;height:282px;background-size:cover}.footer-white .header__top a,.header-black .header__top a,.lorem__title-color{color:#080808}.lorem__title-color2{color:#fff}.footer-white .hamburger__line::after,.footer-white .hamburger__line::before,.header-black .hamburger__line::after,.header-black .hamburger__line::before,.lorem-backround{background:#080808}.getintouch{background:#000;margin-top:-8px}.getintouch__row{margin:104px auto 120px;width:1052px}.getintouch__row button{width:183px;height:48px;background:#fff;font-size:11px;line-height:13px;text-align:center;letter-spacing:.06em;color:#080808;margin-top:72px}.footer-black{background:#fafafa}.footer-black .footer{background:#000;margin-top:-1px}.footer-black .menuScroll,.footer-white .header__top,.header-black .header__top{-webkit-transition:background-color .5s ease;-o-transition:background-color .5s ease;transition:background-color .5s ease}.footer-black .menuScroll{background:rgba(0,0,0,.4)}.footer-white,.header-black{color:#080808;background:#fafafa}.footer-white .header__top,.header-black .header__top{background:rgba(250,250,250,.8)}.footer-white .footer{color:#fff}.back-black{background:#080808}@supports (-webkit-appearance:none){.about__team-input input{background-image:url(../img/about-input.svg)}.blog__link-aimg{background-image:url(../img/blog__link-a1.webp)}.blog__link-aimg2{background-image:url(../img/blog__link-a2.webp)}.blog__link-aimg3{background-image:url(../img/blog__link-a3.webp)}.blog__footer{background-image:url(../img/blog-footer.webp)}.blog__footer-mail input{background-image:url(../img/blog-footer-right.svg)}.onenews-img{background-image:url(../img/onenews1.webp)}.onenews-img2{background-image:url(../img/onenews2.webp)}.onenews-img3{background-image:url(../img/onenews3.webp)}.onenews-img4{background-image:url(../img/onenews4.webp)}.oneproject__header{background-image:url(../img/oneproject1.webp)}.oneproject-img1{background-image:url(../img/oneproject-img1.webp)}.oneproject-img2{background-image:url(../img/oneproject-img2.webp)}.oneproject-img3{background-image:url(../img/oneproject-img3.webp)}.oneproject-img4{background-image:url(../img/oneproject-img4.webp)}.oneproject__next-img{background-image:url(../img/oneproject-img1.webp)}.popup__radio-row input{background-image:url(../img/popup-radio.webp)}.popup__radio-row input:checked{background-image:url(../img/popup-radio-checked.webp)}.file-upload__button{background-image:url(../img/popup-add.webp)}.project__link-aimg5{background-image:url(../img/ptoject5.webp)}.project__link-aimg6{background-image:url(../img/ptoject6.webp)}.project__link-aimg{background-image:url(../img/ptoject1.webp)}.project__link-aimg2{background-image:url(../img/ptoject2.webp)}.project__link-aimg3{background-image:url(../img/ptoject3.webp)}.project__link-aimg4{background-image:url(../img/ptoject4.webp)}}@media (max-width:1470px){.error__row{margin:25% 20% 0}}@media (max-width:1200px){.error__row{margin:30% 20% 0}.location-page2{margin-right:0}.about__slider-left{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.about__slider-left .slider-left__title{width:100%;margin-left:10%}.about__stat-text{padding:90px 3%}.about__stat-img2{display:none}.about__ceo-info{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.about__ceo-info img{display:block;margin:0 auto}.about__ceo-info .about__ceo-number{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end}.about__team h2{margin-left:10%}.about__team-input{width:80%}.contact__row{width:90%}.contact__title h3{font-size:32px;line-height:39px}.main__bottom{width:50%}.main__slide:nth-child(1),.main__slide:nth-child(2),.main__slide:nth-child(3),.main__slide:nth-child(4){width:863px}.company__top{margin-left:63px}.company__bottom{gap:38px;margin-right:116px}.top__right{width:40%}.bottom__left #bottom-img2{width:190px;height:237px}.bottom__left #bottom-img1{width:190px;height:117px}.lorem__top .lorem__top-left .lorem-img:nth-child(1) img{width:100px;height:195.55px}.lorem__top .lorem__top-left .lorem-img:nth-child(2) img{width:229.41px;height:152.37px}.lorem__top .lorem__top-right .lorem-img:nth-child(1) img{width:294.59px;height:135.55px}.lorem__top .lorem__top-right .lorem-img:nth-child(2){margin-top:50px}.lorem__top .lorem__top-right .lorem-img:nth-child(2) img{width:229.41px;height:152.37px}.lorem__bottom-left .lorem-img:nth-child(2) img{width:241.26px;height:159.99px}.lorem__bottom-right .lorem-img:nth-child(2) img{width:190.26px;height:238.99px}.getintouch__row{width:90%}}@media (max-width:1200px) and (max-width:1025px){.bottom__left #bottom-img2{margin-top:94px}.bottom__left #bottom-img1{margin-top:0}.lorem__bottom-left .lorem-img:nth-child(2){margin-left:57px}}@media (max-width:1200px) and (max-width:768px){.bottom__left #bottom-img2{width:153px;height:191px}.bottom__left #bottom-img1{width:335px;height:235px}}@media (max-width:1200px) and (max-width:576px){.bottom__left #bottom-img2{width:131px;height:163px}.bottom__left #bottom-img1{width:264px;height:162px;margin-left:-95px}}@media (max-width:1025px){.error__row{margin:37% 20% 0}.location-page2{margin-left:10%}.about__slider{margin-top:124px}.about__slider-left .slider-left__title{width:100%;margin-left:20%}.about__swiper{height:410px}.about__slide:nth-child(1),.about__slide:nth-child(2),.about__slide:nth-child(3),.about__slide:nth-child(4){width:337px;height:410px}.about__stat-row{margin:124px auto 0}.about__ceo{margin:150px auto 124px}.about__ceo-p{gap:22px;width:80%}.about__ceo-info p{width:100%}.about__team{padding-top:124px}.about__team h2{width:50%}.about__team-input{margin:110px auto 120px}.blog__title{margin:162px auto 110px}.blog__title-row{-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:32px;margin-left:10%}.blog__link-a{height:453px}.blog__link-discover{margin-bottom:0;margin-top:38px}.blog__link-a:nth-child(1),.blog__link-a:nth-child(6){height:453px}.blog__link-a:nth-child(1) a h3,.blog__link-a:nth-child(6) a h3{font-size:20px;line-height:24px;width:90%}.blog__link-a:nth-child(1) a p,.blog__link-a:nth-child(6) a p{width:90%}.blog__link-a:nth-child(3) a p,.blog__link-a:nth-child(4) a p{font-size:20px;line-height:126.9%;padding-top:375px}.blog__pagination{width:33%;margin:64px auto 124px}.blog__footer{height:593px}.blog__footer-row{padding:8% 0 22.7%}.blog__footer-title h2{font-size:32px;line-height:39px;width:58%}.blog__footer-mail input,.blog__footer-mail p{width:53%}.maps__row{gap:40px}.header__menu{margin-left:97px}.container{padding:0 54px}.menu li:nth-child(1){display:block}.menu__link{font-weight:700;font-size:32px;line-height:39px;color:#fff;opacity:.5}.footer-white .header__top .menu__link:hover,.header-black .header__top .menu__link:hover,.menu__link:hover,.navbar__links .menu:hover{opacity:1}.navbar__links{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.navbar__links .menu{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:70%;margin:212px auto 0 25%;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:41px}.navbar__links .menu__row{display:none;width:100%;height:100%;position:fixed;background:rgba(8,8,8,.98);top:-500px;right:0;z-index:1;overflow-y:scroll;-webkit-transition:top .5s ease 0s;-o-transition:top .5s ease 0s;transition:top .5s ease 0s}.navbar__links .menu__row.active{display:block;top:0}.navbar__icon{position:absolute;right:5.4%;gap:56px}.main__bottom-header{display:-webkit-box;display:-ms-flexbox;display:flex}.hamburger,.menu-text{display:block}.hamburger.active .hamburger__line{background-color:transparent}.hamburger.active .hamburger__line::before{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);top:0;width:28px;background-color:#fff}.hamburger.active .hamburger__line::after{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);top:0;width:28px;background-color:#fff}.menu-text{margin-left:23px}.onenews__header{margin:162px auto 80px}.onenews__donec-row p,.onenews__header-title,.onenews__header-title p{width:100%}.onenews__header-title h2{width:80%}.onenews__header-link{display:none}.onenews__header-link2{display:-webkit-box;display:-ms-flexbox;display:flex}.onenews-img{height:454px}.onenews__donec{margin:88px auto}.onenews__donec-row h4{width:66%}.onenews-img2{height:454px}.onenews-img3,.onenews-img4{height:454px;width:49.2%}.onenews__slider{margin:124px 0 131px 10%}.onenews__slider-row{gap:64px}.onenews__slider-title h3,.top__title h3{font-size:32px;line-height:39px}.oneproject__header{height:703px}.oneproject__header-row{padding-top:230px}.oneproject__header-tittle p{width:82%}.oneproject__donec{margin:124px auto}.oneproject__donec-title h4{width:67%}.oneproject__donec-title p{width:90%}.oneproject-img1,.oneproject-img2,.oneproject-img3,.oneproject-img4,.oneproject__img{height:454px}.oneproject__img:nth-child(2),.oneproject__img:nth-child(3){width:49.2%}.oneproject__next-img{margin-bottom:0;height:419px;margin-top:96px}.popup__row{width:80%}.popup__content-bottom,.popup__content-top{width:77%}.file-upload__label{max-width:160px}.popup__send-row{width:80%;padding:100px 0}.ourprojects{margin-top:162px}.ourprojects__top{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:24px}.furinure__img2{width:49%;height:453px}.furinure__img3{width:99.5%;height:453px}.project__link-aimg5,.project__link-aimg6{height:453px}.furinure__img-margin{margin:320px 0 0 26px}.main__bottom{width:67%}.select,.select__body{background:0 0;border:1px solid #fff}.select__body{top:-350%}.lorem__title h2,.slide__row h2{font-size:48px;line-height:59px}.slide__row2{right:-10%;margin-top:-235px}.slide__row2 p{font-size:32px;line-height:31px}.company{margin-top:124px}.company__bottom{margin-left:64px;margin-top:67px;gap:22px}.top__title{padding-top:44px}.bottom__p{gap:18px}.projects{margin-top:124px}.projects__title{margin-top:124px;gap:24px}.projects__furniture{margin-top:124px}.furinure__img-hover-h4{margin:320px 0 0 26px}.furinure__img:nth-child(1),.furinure__img:nth-child(2){width:49%;height:453px}.furinure__img:nth-child(3){height:453px}.furinure__img:nth-child(4),.furinure__img:nth-child(5){width:49%;height:453px}.furinure__img:nth-child(5) h4{font-size:20px;line-height:25px}.furinure__img:nth-child(5) img{width:168px;height:223px}.furinure__img:nth-child(5) img:hover{width:188px;height:243px}.project__link-aimg,.project__link-aimg2,.project__link-aimg3,.project__link-aimg4{height:453px}.furniture__bottom,.furniture__bottom-title{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.furniture__bottom{margin-top:140px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.furniture__bottom-title{width:428px;font-size:32px;line-height:142.4%;text-align:center}.furniture__slideshou{display:none}.slideshou__bottom,.slideshou__bottom button{margin-top:24px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slideshou__bottom p{width:65%;text-align:center}.slideshou__bottom button{margin-top:64px;margin-right:0;margin-bottom:142px}.lorem__title{margin-top:-80px}.lorem__bottom-left .lorem-img:nth-child(1){display:none}.footer-white .header__top .menu__link,.header-black .header__top .menu__link{color:#fff;opacity:.5}}@media (max-width:768px){.error__row{margin:48% 20% 0}.about__header{height:510px}.about__header-row{padding-top:150px}.about__slider{margin-top:104px}.about__slider-row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.about__slider-left{width:85%}.about__slider-left .slider-left__title{margin-left:15%}.about__slider-right{width:90%;margin:0 auto}.about__stat-row{margin:104px auto 0}.about__ceo-title img,.about__stat-img img{display:none}.about__stat-text{padding:0;width:90%;margin:0 auto}.about__stat-text div,.about__stat-text p{text-align:center}.about__ceo{margin:130px auto 104px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.about__ceo-title{width:90%}.about__ceo-title h2{margin:0}.about__ceo-title h4{margin:5% 0 0}.about__ceo-p{width:100%;margin:5% 0 0}.about__ceo-p span{font-size:29px}.about__ceo-p p{font-size:17px}.about__ceo-info{width:100%}.about__ceo-info .about__ceo-number{margin:6% 0}.about__ceo-info .about__ceo-number div span{width:77%}.about__team{padding-top:104px}.about__team h2{width:80%}.about__team-input{margin:80px auto 90px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:40px}.about__team-input input,.about__team-right{width:94%}.about__team-link{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;gap:40px}.blog__title{margin:138px auto 102px}.blog__link-a{height:338px}.blog__link-a:nth-child(1),.blog__link-a:nth-child(6){height:338px}.blog__link-a:nth-child(1) a,.blog__link-a:nth-child(6) a{margin:78% 0 0 10%}.blog__link-a:nth-child(1) a h3,.blog__link-a:nth-child(6) a h3{font-size:16px;line-height:20px}.blog__link-a:nth-child(1) a p,.blog__link-a:nth-child(6) a p{display:none}.blog__link-a:nth-child(3) a p,.blog__link-a:nth-child(4) a p{font-size:16px;padding-top:280px;width:60%}.blog__pagination{width:44%;margin:56px auto 104px}.blog__footer{height:540px}.blog__footer-row{padding:8% 0 26.7%}.blog__footer-mail,.blog__footer-title{width:90%;margin:0 auto}.blog__footer-mail input,.blog__footer-mail p,.blog__footer-title h2{width:100%}.blog__footer-mail{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.contact__row button,.getintouch__row button{margin-top:-41px;display:block}.contact__maps{-ms-flex-wrap:wrap;flex-wrap:wrap}.contact__mail{margin-top:58px;margin-left:75%}.maps__row,.oneproject__donec-title p{width:100%}.header__menu{margin-left:50px}.navbar__links .menu{margin:212px auto 0 25%}.main__bottom-header,.onenews__donec-row h4{width:80%}.onenews__header{margin:138px auto 72px}.onenews__header-title h2{width:85%}.onenews-img{height:335px}.onenews__donec{margin:72px auto}.onenews-img2{height:334px}.onenews-img3,.onenews-img4{height:334px;width:49%}.onenews__slider{margin:104px 0 111px 10%}.oneproject__header{height:959px}.oneproject__header-row{padding-top:368px}.oneproject__header-link{margin:250px 0 0 42px}.oneproject__donec{margin:104px auto}.oneproject__donec-title h4{width:90%}.oneproject-img1,.oneproject-img2,.oneproject-img3,.oneproject-img4,.oneproject__img{height:334px}.oneproject-btn{margin:56px auto 104px}.oneproject__next-img{background-size:100% 150%;height:280px}.popup__close{margin:20px 20px 0 0}.popup__content-input1,.popup__content-input2{width:100%}.popup__content-input2{padding-left:5%;margin-top:38px}.last-input{width:87%}.popup__content-bottom{padding-bottom:0}.popup__radio{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.popup__radio1,.popup__radio2{width:100%}.popup__radio1-span,.popup__radio2-span{width:74%}.popup__add{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:36px auto 44px}.file-upload,.popup__p{display:none}.popup__send-row{width:80%;padding:56px 0}.ourprojects{margin-top:138px}.furinure__img2,.furinure__img3{width:100%;height:672px}.project__link-aimg5,.project__link-aimg6{height:672px}.furinure__img-margin{margin:530px 0 0 26px}.main__bottom{width:80%}.main__swiper{height:959px}.main__slide:nth-child(1),.main__slide:nth-child(2),.main__slide:nth-child(3),.main__slide:nth-child(4){width:560px;height:959px}.slide__row h2{font-size:44px;line-height:54px;width:261px}.slide__row2{max-width:370px;right:-18%;margin-top:-240px}.location-page{left:37%}.company{margin-top:104px}.company__row{padding-left:20px}.company__row .bottom__right,.company__row .top__left{display:none}.company__top{margin-left:20px}.company__bottom{gap:0;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:20px;margin-right:30px}.top__title{width:85%;padding-top:0}.top__right{display:none}.bottom__p{margin-top:0;margin-left:20%}.projects,.projects__title{margin-top:104px}.furinure__img-hover-h4{margin:530px 0 0 26px}.furinure__img:nth-child(1),.furinure__img:nth-child(2){width:100%;height:672px}.furinure__img:nth-child(3){display:none}.furinure__img:nth-child(4),.furinure__img:nth-child(5){width:100%;height:672px}.furinure__img:nth-child(5) img{width:251px;height:331px}.furinure__img:nth-child(5) img:hover{width:271px;height:351px}.project__link-aimg,.project__link-aimg2{height:672px}.project__link-aimg3{display:none}.project__link-aimg4{height:672px}.furniture__bottom{margin-top:96px}.lorem{overflow:hidden}.lorem__title{margin-top:-25px}.lorem__title h2{font-size:44px;line-height:54px}.getintouch__row{margin:88px auto 103px}}@media (max-width:665px){.slide__row2{right:-20%}}@media (max-width:600px){.slide__row2{right:-23%}}@media (max-width:576px){.error__row{margin:65% 10% 0}.about__header-row{width:90%}.about__ceo-title h2,.about__header-row h2,.about__slider-left .slider-left__title h2{font-size:29px;line-height:36px}.about__slider{margin-top:80px}.about__stat-row{margin:80px auto 0}.about__ceo-info .about__ceo-number div h2,.about__stat-text div h2{font-size:39px;line-height:60px}.about__stat-text p{padding-top:0;text-align:start}.about__ceo{margin:80px auto}.about__ceo-p span{font-size:26px}.about__ceo-p p{font-size:14px}.about__team{padding-top:80px}.about__team h2{font-size:30px;line-height:40px}.about__team-input{margin:60px auto 70px}.about__team-input input{font-size:18px}.blog__title{margin:116px auto 64px}.blog__title-row{margin-left:0}.blog__title-row h2{font-size:31px}.blog__title-btn,.navbar__icon #a_btn{display:none}.select-blog{display:block}.blog__link-a{width:100%;height:327px}.blog__link-discover{margin-top:18px}.blog__link-a:nth-child(1),.blog__link-a:nth-child(6){height:327px}.blog__link-a:nth-child(1) img,.blog__link-a:nth-child(6) img{display:block;width:100%;height:218px}.blog__link-a:nth-child(1) a,.blog__link-a:nth-child(6) a{margin:3% 0 0 6%}.blog__link-a:nth-child(2),.blog__link-a:nth-child(5){display:none}.blog__pagination{width:72%;margin:48px auto 80px}.blog__footer{height:518px}.blog__footer-row{padding:15% 0 26.7%;width:97%}.blog__footer-title h2,.contact__title h3,.onenews__header-title h2,.oneproject__header-tittle h2,.oneproject__next h2{font-size:26px;line-height:32px}.contact__row button{margin-top:48px;margin-bottom:35px}.contact__title p,.onenews__donec-row h4,.oneproject__donec-title h4{width:100%}.contact__mail{margin-top:40px;margin-left:0}.maps__row{-ms-flex-wrap:wrap;flex-wrap:wrap}.footer__row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:16px}.container{padding:0 24px}.menu__link{font-size:26px;line-height:32px;text-align:center}.navbar__links{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.navbar__links .menu{width:140px;margin:152px auto 0;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:34px}.navbar__icon{right:22.4%}.a_btn-menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:320px 0 0}.main__bottom-header{width:89%}.main__bottom-header .bottom__link,.menu-text{display:none}.main__bottom-header .main__contact{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px}.onenews__header{margin:116px auto 64px}.onenews-img{height:220px}.onenews__donec{margin:64px auto;width:85%}.onenews-img2{height:220px}.onenews-img3,.onenews-img4{height:393px;width:100%}.onenews__slider{margin:80px 0 80px 5%}.onenews__slide:nth-child(1),.onenews__slide:nth-child(2),.onenews__slide:nth-child(3),.onenews__slide:nth-child(4),.onenews__slide:nth-child(5){width:290px}.onenews__slide:nth-child(1) img,.onenews__slide:nth-child(2) img,.onenews__slide:nth-child(3) img,.onenews__slide:nth-child(4) img,.onenews__slide:nth-child(5) img{width:290px;height:357px}.oneproject__header{height:542px}.oneproject__header-row{padding-top:107px}.oneproject__header-tittle{width:90%}.oneproject__header-tittle p{width:100%;margin-top:16px}.oneproject__header-chair{margin:32px auto 0;width:90%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:26px}.oneproject__header-link{margin:40px 0 0 22px;gap:26px}.oneproject__donec{margin:80px auto;width:90%}.oneproject__img:nth-child(1){width:100%;height:163px}.oneproject__img:nth-child(2),.oneproject__img:nth-child(3){width:100%;height:392px}.oneproject__img:nth-child(4){width:100%;height:163px}.oneproject-img1{height:163px}.oneproject-img2,.oneproject-img3{height:392px}.oneproject-img4{height:163px}.oneproject-btn{margin:48px auto 80px}.oneproject__next-img{background-size:100% 210%;height:190px;margin-top:56px}.popup__row{margin:19% auto;background:#080808}.popup__content-top{margin:0;padding:24px 0 40px;width:100%}.popup__content-bottom{margin:0;padding-top:40px;width:100%}.popup__send-row{width:80%;padding:40px 0}.ourprojects{margin-top:116px}.ourprojects__top{width:100%}.ourprojects__top-title,.top__title h3{font-size:26px;line-height:32px}.ourprojects__top-right p{width:100%;margin-bottom:24px}.ourprojects-menu,.slide__row2 span{display:none}.button-filet.active__button{border-bottom:none;background-color:#c7c7c7}.furinure__img2,.furinure__img3,.project__link-aimg5,.project__link-aimg6{height:327px}.furinure__img-margin{margin:170px 0 0 24px}.main__bottom{width:76%}.main__bottom .main__contact{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px}.main__swiper{height:542px}.main__slide:nth-child(1),.main__slide:nth-child(2),.main__slide:nth-child(3),.main__slide:nth-child(4){width:316px;height:542px}.slide__row{left:7%}.slide__row h2{font-size:40px;line-height:39px}.slide__row2{margin-top:-135px;right:-14%}.slide__row2 p{-webkit-text-fill-color:#fff;-webkit-text-stroke:#fff;font-size:18px;line-height:18px}.bottom__link{display:none}.location-page{left:5%;top:24.5%}.main__scrollbar{width:135px}.company{margin-top:80px}.company__bottom{margin-right:10px}.top__title{width:95%}.bottom__p{margin-left:0;margin-top:80px}.bottom__p span{font-size:25.575px;line-height:31px}.bottom__p p{font-size:16px;line-height:170.66%}.projects{margin-top:64px}.projects__title{padding-top:80px;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.projects__title p{width:100%;text-align:start}.projects__furniture{margin-top:80px}.furinure__img-hover{display:block}.furinure__img-hover-h4{margin:200px 0 0 24px}.furinure__img:nth-child(1),.furinure__img:nth-child(2),.furinure__img:nth-child(3),.furinure__img:nth-child(4),.furinure__img:nth-child(5){height:327px}.furinure__img:nth-child(5) img{width:121px;height:161px}.furinure__img:nth-child(5) img:hover{width:131px;height:171px}.project__link-aimg,.project__link-aimg2,.project__link-aimg4{height:327px}.img__data{padding:24px 0 0 24px}.furniture__bottom-title{width:100%;font-size:26px;line-height:32px;text-align:start}.slideshou__bottom{width:100%;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.slideshou__bottom p{text-align:start;width:100%}.slideshou__bottom button{margin-top:48px;margin-bottom:96px}.lorem__title{margin-top:52px}.lorem__title h2{font-size:32px;line-height:39px}.lorem__title p{width:288px}.lorem__top{padding-right:0}.lorem__top .lorem__top-left .lorem-img:nth-child(1){margin-top:98px}.lorem__top .lorem__top-left .lorem-img:nth-child(1) img{width:67px;height:104px}.lorem__top .lorem__top-left .lorem-img:nth-child(2) img{width:121.64px;height:80.88px}.lorem__top .lorem__top-right .lorem-img:nth-child(1){margin-top:112px}.lorem__top .lorem__top-right .lorem-img:nth-child(1) img{width:80px;height:114px}.lorem__top .lorem__top-right .lorem-img:nth-child(2){display:none}.lorem__bottom-left .lorem-img:nth-child(1){margin-top:65px;display:block}.lorem__bottom-left .lorem-img:nth-child(1) img{width:86px;height:123px}.lorem__bottom-left .lorem-img:nth-child(2){margin-top:42px;margin-left:-47px}.lorem__bottom-left .lorem-img:nth-child(2) img,.lorem__bottom-right .lorem-img:nth-child(1) img{width:105.81px;height:70.21px}.lorem__bottom-right .lorem-img:nth-child(1){margin-top:200px}.lorem__bottom-right .lorem-img:nth-child(2) img{width:60px;height:139px}.getintouch__row{margin:56px auto}.getintouch__row button{margin-top:48px}}@media (max-width:420px){.slide__row2{right:-20%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */